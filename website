<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Paintings Webpage</title>
    <link rel="stylesheet" href="./css/styel01.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.14.0/css/all.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
    <link
    href="https://fonts.googleapis.com/css2?family=Baloo+Da+2:wght@400;500;600;700;800&family=Josefin+Slab:ital,wght@0,400;0,600;0,700;1,300;1,400;1,600&family=Mulish:ital,wght@0,300;0,400;0,600;0,700;1,300;1,400;1,500;1,600&display=swap" rel="stylesheet">
  </head>

  <body>
    <div class="spinner-container">
          <div class="circles">
            <div></div>
            <div></div>
            <div></div>
            <div></div>
            <div></div>
            <div></div>
            <div></div>
            <div></div>
          </div>
        </div>

<div class="container">
      <div class="hamburger-menu">
        <div class="line line-1"></div>
        <div class="line line-2"></div>
        <div class="line line-3"></div>
        <span>Close</span>
      </div>
    <header class="header">
        <div class="img-wrapper">
        <img src="./img/firstimage.jpg" alt="image displaying mountains">
        </div>

        <div class="logo">
          <h1>
            <span class="center">P</span>
            <span class="center">O</span>
            <span class="center">R</span>
            <span class="center">T</span>
            <span class="center">F</span>
            <span class="center">O</span>
            <span class="center">L</span>
            <span class="center">I</span>
            <span class="center">O</span>
          </h1>
        </div>

      <div class="banner">
       <h1>Welcome Home <br> Creative-Thinkers</h1>
       <p>A place for creative mindset and people who love paintings</p>
       <button type="button" name="button">More Here</button>
     </div>
   </header>

   <section class="sidebar">
    <ul class="menu">
       <li class="menu-item">
       <a href="#" class="menu-link" data-content="Home">Home</a>
       </li>
       <li class="menu-item">
       <a href="#" class="menu-link" data-content="About us">About us</a>
       </li>
       <li class="menu-item">
       <a href="#" class="menu-link" data-content="Team">Team</a>
       </li>
       <li class="menu-item">
       <a href="#" class="menu-link" data-content="Pricing">Pricing</a>
       </li>
       <li class="menu-item">
       <a href="#" class="menu-link" data-content="Contact">Contact</a>
       </li>
   </ul>

   <div class="social-media">
     <a href="#"><i class="fa fa-facebook"></i></a>
     <a href="#" ><i class="fa fa-twitter"></i></a>
     <a href="#" ><i class="fa fa-google"></i></a>
   </div>
  </section>

  <section class="about-us">
    <div class="section-header">
      <h1 class="section-heading">About Us</h1>
      <div class="underline"></div>
    </div>

    <div class="services">
      <div class="service">
        <div class="service-header">
          <i class="fas fa-pen-nib"></i>
          <h3>Interior</h3>
          </div>
          <p class="service-text">I love my ambudu. My ambotti is a gift from God.
          i am so fortunate to have him by my side. Nothing in this world is comparable to him.
        His endless love and care makes me high up to the stars. Can't explain in words, how much i love him.
      wants to live another 1000s life with him.</p>
        </div>

      <div class="service">
        <div class="service-header">
          <i class="fas fa-paint-roller"></i>
          <h3>Exterior</h3>
          </div>
          <p class="service-text">I love my ambudu. My ambotti is a gift from God.
          i am so fortunate to have him by my side. Nothing in this world is comparable to him.
        His endless love and care makes me high up to the stars. Can't explain in words, how much i love him.
      wants to live another 1000s life with him.</p>
        </div>

      <div class="service">
        <div class="service-header">
          <i class="fas fa-pencil-alt"></i>
          <h3>Design</h3>
          </div>
          <p class="service-text">I love my ambudu. My ambotti is a gift from God.
          i am so fortunate to have him by my side. Nothing in this world is comparable to him.
        His endless love and care makes me high up to the stars. Can't explain in words, how much i love him.
      wants to live another 1000s life with him.</p>
        </div>

      <div class="service">
        <div class="service-header">
          <i class="fas fa-paint-brush"></i>
          <h3>Decoration</h3>
          </div>
          <p class="service-text">I love my ambudu. My ambotti is a gift from God.
          i am so fortunate to have him by my side. Nothing in this world is comparable to him.
        His endless love and care makes me high up to the stars. Can't explain in words, how much i love him.
      wants to live another 1000s life with him.</p>
        </div>

      <div class="service">
        <div class="service-header">
          <i class="fas fa-ruler-combined"></i>
          <h3>Planning</h3>
          </div>
          <p class="service-text">I love my ambudu. My ambotti is a gift from God.
          i am so fortunate to have him by my side. Nothing in this world is comparable to him.
        His endless love and care makes me high up to the stars. Can't explain in words, how much i love him.
      wants to live another 1000s life with him.</p>
        </div>

      <div class="service">
        <div class="service-header">
          <i class="fas fa-building"></i>
          <h3>Execution</h3>
          </div>
          <p class="service-text">I love my ambudu. My ambotti is a gift from God.
          i am so fortunate to have him by my side. Nothing in this world is comparable to him.
        His endless love and care makes me high up to the stars. Can't explain in words, how much i love him.
      wants to live another 1000s life with him.</p>
        </div>

      <div class="about-us-img-wrapper">
        <img src="./img/flower.jpg" alt="mountains">
      </div>
    </div>
  </section>

  <section class="team">
    <div class="section-header">
      <h1 class="section-heading">OurTeam</h1>
      <div class="underline"></div>
    </div>
    <div class="cards-wrapper">
      <div class="card" data-tilt>
      <div class="card-image-wrapper">
        <img src="./img/spiderman2.jpg" alt="ceo photo">
      </div>
      <div class="card-info">
        <h2>Ashok Kumar</h2>
        <h3>CEO of Traveloom</h3>
        <p>"As a CEO, he is a highly motivated person, always sticks to his goals no matter what happens.
          Surprised by his ability to overcome obstacles in the way to his dreams" </p>
          <button>Read More</button>
      </div>
      </div>
      <div class="card" data-tilt>
      <div class="card-image-wrapper">
        <img src="./img/superman1.jpg" alt="senior photo">
      </div>
      <div class="card-info">
        <h2>Sukanya Sugathan</h2>
        <h3>Designer of Traveloom</h3>
        <p>"As a CEO, he is a highly motivated person, always sticks to his goals no matter what happens.
          Surprised by his ability to overcome obstacles in the way to his dreams" </p>
          <button>Read More</button>
      </div>
      </div>
      <div class="card" data-tilt>
      <div class="card-image-wrapper">
        <img src="./img/spiderman1.jpg" alt=" photo">
      </div>
      <div class="card-info">
        <h2>Puttappi</h2>
        <h3>Child of Traveloom</h3>
        <p>"As a CEO, he is a highly motivated person, always sticks to his goals no matter what happens.
          Surprised by his ability to overcome obstacles in the way to his dreams" </p>
          <button>Read More</button>
      </div>
      </div>
    </div>
  </section>



<section class="contact">
  <div class="contact-wrapper">
    <div class="contact-left"></div>
      <div class="contact-right">
        <h1 class="contact-heading">Contact</h1>
        <form>

          <div class="input-group">
            <input type="text" class="field"/>
            <label class="input-label">Full Name</label>
          </div>
          <div class="input-group">
            <input type="email" class="field"/>
            <label class="input-label">Email</label>
          </div>
          <div class="input-group">
              <textarea class="field"></textarea>
              <label class="message">Message</label>
          </div>
          <input type="submit" class="submit-btn" value="Submit"/>
        </form>
      </div>
   </div>
</section>

 <footer class="footer">
  <div class="footer-content">
    <p class="copyright">Copyright & copy; 2020, All rights reserved</p>
    <div class="social-list">
      <a href="#"><i class="fab fa-instagram"></i></a>
      <a href="#"><i class="fab fa-facebook-f"></i></a>
      <a href="#"><i class="fab fa-twitter"></i></a>
    </div>
  </div>
 </footer>
 <a href="#" class="scroll-btn">
         <i class="fas fa-arrow-up"></i>
       </a>
</div>





    <script>
    window.onload = () => {
  setTimeout(() => {
    document.querySelector("body").classList.add("display");
  }, 4000);
};

    document.querySelector(".hamburger-menu").addEventListener("click",()=>{
       document.querySelector(".container").classList.toggle("change");
    });

    document.querySelector(".scroll-btn").addEventListener("click", () => {
  document.querySelector("html").style.scrollBehavior = "smooth";
  setTimeout(() => {
    document.querySelector("html").style.scrollBehavior = "unset";
  }, 1000);
});

    </script>
<script src="https://code.jquery.com/jquery-3.5.1.js" integrity="sha256-QWo7LDvxbWT2tbbQ97B53yJnYU3WhH/C8ycbRAkjPDc=" crossorigin="anonymous"></script>
<script>
(function (factory) {
    if (typeof define === 'function' && define.amd) {
        // AMD. Register as an anonymous module.
        define(['jquery'], factory);
    } else if (typeof module === 'object' && module.exports) {
        // Node/CommonJS
        module.exports = function( root, jQuery ) {
            if ( jQuery === undefined ) {
                // require('jQuery') returns a factory that requires window to
                // build a jQuery instance, we normalize how we use modules
                // that require this pattern but the window provided is a noop
                // if it's defined (how jquery works)
                if ( typeof window !== 'undefined' ) {
                    jQuery = require('jquery');
                }
                else {
                    jQuery = require('jquery')(root);
                }
            }
            factory(jQuery);
            return jQuery;
        };
    } else {
        // Browser globals
        factory(jQuery);
    }
}(function ($) {
    $.fn.tilt = function (options) {

        /**
         * RequestAnimationFrame
         */
        const requestTick = function() {
            if (this.ticking) return;
            requestAnimationFrame(updateTransforms.bind(this));
            this.ticking = true;
        };

        /**
         * Bind mouse movement evens on instance
         */
        const bindEvents = function() {
            const _this = this;
            $(this).on('mousemove', mouseMove);
            $(this).on('mouseenter', mouseEnter);
            if (this.settings.reset) $(this).on('mouseleave', mouseLeave);
            if (this.settings.glare) $(window).on('resize', updateGlareSize.bind(_this));
        };

        /**
         * Set transition only on mouse leave and mouse enter so it doesn't influence mouse move transforms
         */
        const setTransition = function() {
            if (this.timeout !== undefined) clearTimeout(this.timeout);
            $(this).css({'transition': `${this.settings.speed}ms ${this.settings.easing}`});
            if(this.settings.glare) this.glareElement.css({'transition': `opacity ${this.settings.speed}ms ${this.settings.easing}`});
            this.timeout = setTimeout(() => {
                $(this).css({'transition': ''});
                if(this.settings.glare) this.glareElement.css({'transition': ''});
            }, this.settings.speed);
        };

        /**
         * When user mouse enters tilt element
         */
        const mouseEnter = function(event) {
            this.ticking = false;
            $(this).css({'will-change': 'transform'});
            setTransition.call(this);

            // Trigger change event
            $(this).trigger("tilt.mouseEnter");
        };

        /**
         * Return the x,y position of the mouse on the tilt element
         * @returns {{x: *, y: *}}
         */
        const getMousePositions = function(event) {
            if (typeof(event) === "undefined") {
                event = {
                    pageX: $(this).offset().left + $(this).outerWidth() / 2,
                    pageY: $(this).offset().top + $(this).outerHeight() / 2
                };
            }
            return {x: event.pageX, y: event.pageY};
        };

        /**
         * When user mouse moves over the tilt element
         */
        const mouseMove = function(event) {
            this.mousePositions = getMousePositions(event);
            requestTick.call(this);
        };

        /**
         * When user mouse leaves tilt element
         */
        const mouseLeave = function() {
            setTransition.call(this);
            this.reset = true;
            requestTick.call(this);

            // Trigger change event
            $(this).trigger("tilt.mouseLeave");
        };

        /**
         * Get tilt values
         *
         * @returns {{x: tilt value, y: tilt value}}
         */
        const getValues = function() {
            const width = $(this).outerWidth();
            const height = $(this).outerHeight();
            const left = $(this).offset().left;
            const top = $(this).offset().top;
            const percentageX = (this.mousePositions.x - left) / width;
            const percentageY = (this.mousePositions.y - top) / height;
            // x or y position inside instance / width of instance = percentage of position inside instance * the max tilt value
            const tiltX = ((this.settings.maxTilt / 2) - ((percentageX) * this.settings.maxTilt)).toFixed(2);
            const tiltY = (((percentageY) * this.settings.maxTilt) - (this.settings.maxTilt / 2)).toFixed(2);
            // angle
            const angle = Math.atan2(this.mousePositions.x - (left+width/2),- (this.mousePositions.y - (top+height/2)) )*(180/Math.PI);
            // Return x & y tilt values
            return {tiltX, tiltY, 'percentageX': percentageX * 100, 'percentageY': percentageY * 100, angle};
        };

        /**
         * Update tilt transforms on mousemove
         */
        const updateTransforms = function() {
            this.transforms = getValues.call(this);

            if (this.reset) {
                this.reset = false;
                $(this).css('transform', `perspective(${this.settings.perspective}px) rotateX(0deg) rotateY(0deg)`);

                // Rotate glare if enabled
                if (this.settings.glare){
                    this.glareElement.css('transform', `rotate(180deg) translate(-50%, -50%)`);
                    this.glareElement.css('opacity', `0`);
                }

                return;
            } else {
                $(this).css('transform', `perspective(${this.settings.perspective}px) rotateX(${this.settings.disableAxis === 'x' ? 0 : this.transforms.tiltY}deg) rotateY(${this.settings.disableAxis === 'y' ? 0 : this.transforms.tiltX}deg) scale3d(${this.settings.scale},${this.settings.scale},${this.settings.scale})`);

                // Rotate glare if enabled
                if (this.settings.glare){
                    this.glareElement.css('transform', `rotate(${this.transforms.angle}deg) translate(-50%, -50%)`);
                    this.glareElement.css('opacity', `${this.transforms.percentageY * this.settings.maxGlare / 100}`);
                }
            }

            // Trigger change event
            $(this).trigger("change", [this.transforms]);

            this.ticking = false;
        };

        /**
         * Prepare elements
         */
        const prepareGlare = function () {
            const glarePrerender = this.settings.glarePrerender;

            // If option pre-render is enabled we assume all html/css is present for an optimal glare effect.
            if (!glarePrerender)
            // Create glare element
                $(this).append('<div class="js-tilt-glare"><div class="js-tilt-glare-inner"></div></div>');

            // Store glare selector if glare is enabled
            this.glareElementWrapper = $(this).find(".js-tilt-glare");
            this.glareElement = $(this).find(".js-tilt-glare-inner");

            // Remember? We assume all css is already set, so just return
            if (glarePrerender) return;

            // Abstracted re-usable glare styles
            const stretch = {
                'position': 'absolute',
                'top': '0',
                'left': '0',
                'width': '100%',
                'height': '100%',
            };

            // Style glare wrapper
            this.glareElementWrapper.css(stretch).css({
                'overflow': 'hidden',
                'pointer-events': 'none',
            });

            // Style glare element
            this.glareElement.css({
                'position': 'absolute',
                'top': '50%',
                'left': '50%',
                'background-image': `linear-gradient(0deg, rgba(255,255,255,0) 0%, rgba(255,255,255,1) 100%)`,
                'width': `${$(this).outerWidth()*2}`,
                'height': `${$(this).outerWidth()*2}`,
                'transform': 'rotate(180deg) translate(-50%, -50%)',
                'transform-origin': '0% 0%',
                'opacity': '0',
            });

        };

        /**
         * Update glare on resize
         */
        const updateGlareSize = function () {
            this.glareElement.css({
                'width': `${$(this).outerWidth()*2}`,
                'height': `${$(this).outerWidth()*2}`,
            });
        };

        /**
         * Public methods
         */
        $.fn.tilt.destroy = function() {
            $(this).each(function () {
                $(this).find('.js-tilt-glare').remove();
                $(this).css({'will-change': '', 'transform': ''});
                $(this).off('mousemove mouseenter mouseleave');
            });
        };

        $.fn.tilt.getValues = function() {
            const results = [];
            $(this).each(function () {
                this.mousePositions = getMousePositions.call(this);
                results.push(getValues.call(this));
            });
            return results;
        };

        $.fn.tilt.reset = function() {
            $(this).each(function () {
                this.mousePositions = getMousePositions.call(this);
                this.settings = $(this).data('settings');
                mouseLeave.call(this);
                setTimeout(() => {
                    this.reset = false;
                }, this.settings.transition);
            });
        };

        /**
         * Loop every instance
         */
        return this.each(function () {

            /**
             * Default settings merged with user settings
             * Can be set trough data attributes or as parameter.
             * @type {*}
             */
            this.settings = $.extend({
                maxTilt: $(this).is('[data-tilt-max]') ? $(this).data('tilt-max') : 20,
                perspective: $(this).is('[data-tilt-perspective]') ? $(this).data('tilt-perspective') : 300,
                easing: $(this).is('[data-tilt-easing]') ? $(this).data('tilt-easing') : 'cubic-bezier(.03,.98,.52,.99)',
                scale: $(this).is('[data-tilt-scale]') ? $(this).data('tilt-scale') : '1',
                speed: $(this).is('[data-tilt-speed]') ? $(this).data('tilt-speed') : '400',
                transition: $(this).is('[data-tilt-transition]') ? $(this).data('tilt-transition') : true,
                disableAxis: $(this).is('[data-tilt-disable-axis]') ? $(this).data('tilt-disable-axis') : null,
                axis: $(this).is('[data-tilt-axis]') ? $(this).data('tilt-axis') : null,
                reset: $(this).is('[data-tilt-reset]') ? $(this).data('tilt-reset') : true,
                glare: $(this).is('[data-tilt-glare]') ? $(this).data('tilt-glare') : false,
                maxGlare: $(this).is('[data-tilt-maxglare]') ? $(this).data('tilt-maxglare') : 1,
            }, options);

            // Add deprecation warning & set disableAxis to deprecated axis setting
            if(this.settings.axis !== null){
                console.warn('Tilt.js: the axis setting has been renamed to disableAxis. See https://github.com/gijsroge/tilt.js/pull/26 for more information');
                this.settings.disableAxis = this.settings.axis;
            }

            this.init = () => {
                // Store settings
                $(this).data('settings', this.settings);

                // Prepare element
                if(this.settings.glare) prepareGlare.call(this);

                // Bind events
                bindEvents.call(this);
            };

            // Init
            this.init();

        });
    };

    /**
     * Auto load
     */
    $('[data-tilt]').tilt();

    return true;
}));
</script>

  </body>
</html>
